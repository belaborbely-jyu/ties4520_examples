<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE rdf:RDF [
  <!ENTITY rdf       "http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <!ENTITY xsd       "http://www.w3.org/2001/XMLSchema#">
  <!ENTITY owl       "http://www.w3.org/2002/07/owl#">
  <!ENTITY sswap     "http://sswapmeet.sswap.info/sswap/">
  <!ENTITY provider  "http://sswap.info/examples/">
  <!ENTITY resources "http://sswap.info/examples/resources/">
]>

<rdf:RDF
  xmlns:rdf       = "&rdf;"
  xmlns:xsd       = "&xsd;"
  xmlns:owl       = "&owl;"
  xmlns:sswap     = "&sswap;"
  xmlns:provider  = "&provider;"
  xmlns:resources = "&resources;">

  <owl:Ontology rdf:about="&sswap;owlOntology">
    <owl:imports rdf:resource="&sswap;owlOntology"/>
  </owl:Ontology>

  <sswap:Resource rdf:about="&resources;canonical/canonicalResource">

    <!-- Every resource must have a name.  Use something short and
         informative that can be displayed to users.  -->
    <sswap:name>A canonical SSWAP web resource</sswap:name>

    <!-- Enter a one line description about this resource.  Client viewers,
         such as the search engine at http://sswap.info may use this one
         one line description to give users a quick description about the
         resource.  For more detailed information, direct users to the
         sswap:aboutURI URL.  -->
    <sswap:oneLineDescription>This is a canonical resource.  It can be used as a template for real resources.</sswap:oneLineDescription>

    <!-- The sswap:aboutURI predicate allows you to link this resource to
         the web for the benefit of users seeking more detailed information
         about this provider than just a name and oneLineDescription.

         SSWAP does not stipulate how the sswap:aboutURI is to be used, but
         it is suggested that it point to an informative human-readable web
         page.  -->
    <sswap:aboutURI rdf:datatype="&xsd;anyURI">&resources;canonical/about.htm</sswap:aboutURI>

    <!-- The metadata file allows you to associate searchable text with this
         resource.  While you have complete control over what is in the file,
         providers do not have control on how, or even if, others may use the
         file. -->
    <sswap:metadata rdf:datatype="&xsd;anyURI">&resources;canonical/metadata.txt</sswap:metadata>

    <!-- Use the sswap:providedBy predicate to identify those semantic web
         services (resources) for which claim ownership of this resource.

         If a resource's URL is not a sub-directory of its provider's URL, then
         this predicate is required and the provider's sswap:providesResource
         predicate must reciprocate the assertion back to this resource.

         Each resource must have exactly one provider. -->
    <sswap:providedBy>
      <sswap:Provider rdf:about="&provider;resourceProvider"/>
    </sswap:providedBy>

    <!-- Here starts the canonical graph.

         In this template, the sequence of predicates (properties: operatesOn,
         hasMapping, and mapsTo) simply joins blank nodes of types Graph,
         Subject, and Object respectively.

         To establish an actual mapping, add predicates and restrictions to
         the Subject and Object nodes.  The Graph node is used only in cases
         of complex 1:many or many:many mappings.

         See the protocol at http://sswap.info/protocol. -->
    <sswap:operatesOn>
      <sswap:Graph>
        <sswap:hasMapping>
          <sswap:Subject rdf:about="&resources;canonical/canonicalResource">
            <sswap:mapsTo>
              <sswap:Object rdf:about="&resources;canonical/canonicalResource">
              </sswap:Object>
            </sswap:mapsTo>
          </sswap:Subject>
        </sswap:hasMapping>
      </sswap:Graph>
    </sswap:operatesOn>

  </sswap:Resource>

</rdf:RDF>
